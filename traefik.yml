## STATIC CONFIGURATION
log:
  level: INFO

api:
  insecure: true
  dashboard: true
  debug: true

entryPoints:
  web:
    address: ":80"

providers:
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false
  file:
    filename: "traefik.yml"

## DYNAMIC CONFIGURATION
http:
  routers:
    route-to-idtserver:
      rule: "PathPrefix(`/idt/api/`)"
      service: route-to-api-service-idt
      middlewares:
        - "auth"
        - "replacepath-regex"
#        - "cors-headers"
      priority: 1000
      entryPoints:
        - web
    route-to-auth:
      rule: "Path(`/login`)"
      service: "route-to-authorize-api"
      middlewares:
        - "replacepath-authorize"
#        - "cors-headers"
      priority: 0
      entryPoints:
        - web
  middlewares:
    auth:
      forwardAuth:
        address: "http://sso_service:4445/internal_api/validate"
        trustForwardHeader: true
    replacepath-authorize:
      replacePath:
        path: "/internal_api/authorize"
     # this demo replaces path by regex
    replacepath-regex:
      replacePathRegex:
        regex: "(.*?)/api/(.*)"
        replacement: "/internal_api/$2"
    cors-headers:
      headers:
        accessControlAllowMethods:
          - GET
          - OPTIONS
          - PUT
          - POST
          - HEAD
        accessControlAllowHeaders:
          - "*"
        accessControlAllowOriginList:
          - "*"
        referrerPolicy: origin
        accessControlMaxAge: 100
        addVaryHeader: true
  services:
    route-to-authorize-api:
      loadBalancer:
        servers:
          - url: "http://sso_service:4445"
    route-to-api-service-dummy:
      loadBalancer:
        servers:
          - url: "http://dummy_service:4448"